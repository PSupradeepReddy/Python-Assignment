# -*- coding: utf-8 -*-
"""Copy of Untitled39.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JLFokuh6XUkPg7c8siklIDRmVuC862xY
"""

#P Supradeep Reddy - E22CSEU0614
 #Program to take two numbers as input and print their sum
def sum_two_numbers():
    num1 = float(input("Enter the first number: "))
    num2 = float(input("Enter the second number: "))
    result = num1 + num2
    print(f"The sum of {num1} and {num2} is {result}")

sum_two_numbers()

# 2. Program to check whether a given number is even or odd
def check_even_or_odd():
    num = int(input("Enter a number: "))
    if num % 2 == 0:
        print(f"{num} is even.")
    else:
        print(f"{num} is odd.")

check_even_or_odd()

# 3. Program to calculate the factorial of a given number
def factorial(num):
    if num == 0:
        return 1
    else:
        return num * factorial(num - 1)

def calculate_factorial():
    num = int(input("Enter a number: "))
    result = factorial(num)
    print(f"The factorial of {num} is {result}")

calculate_factorial()

# 4. Program to ask the user for their name and then print a greeting message
def greet_user():
    name = input("Enter your name: ")
    print(f"Hello, {name}! Nice to meet you.")

greet_user()

# 5. Program to take a string input from the user and write it to a text file
def write_to_file():
    user_input = input("Enter a string: ")
    with open("output.txt", "w") as file:
        file.write(user_input)
    print("The string has been written to output.txt.")

write_to_file()

# 6. Program to read the content of a text file and print it to the console
def read_from_file():
    try:
        with open("output.txt", "r") as file:
            content = file.read()
            print("The content of the file is:")
            print(content)
    except FileNotFoundError:
        print("The file does not exist.")

read_from_file()

# 7. Program to take a string as input and return its length
def string_length():
    user_input = input("Enter a string: ")
    length = len(user_input)
    print(f"The length of the string is {length}.")

string_length()

# 8. Program to concatenate two strings and return the result
def concatenate_strings():
    str1 = input("Enter the first string: ")
    str2 = input("Enter the second string: ")
    result = str1 + str2
    print(f"The concatenated string is: {result}")

concatenate_strings()

# 9. Program to check if a substring is present in a given string
def check_substring():
    main_string = input("Enter the main string: ")
    substring = input("Enter the substring: ")
    if substring in main_string:
        print(f"The substring '{substring}' is present in the main string.")
    else:
        print(f"The substring '{substring}' is not present in the main string.")

check_substring()

# 10. Program to convert a given string to uppercase
def convert_to_uppercase():
    user_input = input("Enter a string: ")
    result = user_input.upper()
    print(f"The uppercase string is: {result}")

convert_to_uppercase()

def fibonacci_sequence(n):
    fib_sequence = [0, 1]
    for i in range(2, n):
        fib_sequence.append(fib_sequence[-1] + fib_sequence[-2])
    return fib_sequence[:n]

n = int(input("Enter the number of Fibonacci numbers to generate: "))
print(fibonacci_sequence(n))

def sum_of_digits(num):
    return sum(int(digit) for digit in str(num))

num = int(input("Enter a number: "))
print(f"The sum of the digits of {num} is {sum_of_digits(num)}.")

from datetime import datetime

def calculate_age(birth_year):
    current_year = datetime.now().year
    return current_year - birth_year

birth_year = int(input("Enter your birth year: "))
print(f"Your age is {calculate_age(birth_year)}.")

def read_lines():
    lines = []
    while True:
        line = input()
        if line == "":
            break
        lines.append(line)
    return lines

print("Enter multiple lines (press Enter on an empty line to finish):")
lines = read_lines()
print("\nYou entered:")
for line in lines:
    print(line)

import csv

def read_csv(file_path):
    with open(file_path, mode='r') as file:
        csv_reader = csv.reader(file)
        for row in csv_reader:
            print(row)

file_path = input("Enter the path to the CSV file: ")
read_csv(file_path)

def character_frequency(string):
    frequency = {}
    for char in string:
        frequency[char] = frequency.get(char, 0) + 1
    return frequency

string = input("Enter a string: ")
print(character_frequency(string))

def to_title_case(string):
    return string.title()

string = input("Enter a string: ")
print(to_title_case(string))

def are_anagrams(str1, str2):
    return sorted(str1) == sorted(str2)

str1 = input("Enter the first string: ")
str2 = input("Enter the second string: ")
if are_anagrams(str1, str2):
    print(f"{str1} and {str2} are anagrams.")
else:
    print(f"{str1} and {str2} are not anagrams.")

import string

def remove_punctuation(text):
    return text.translate(str.maketrans('', '', string.punctuation))

text = input("Enter a string: ")
print(remove_punctuation(text))

def sum_of_list(numbers):
    return sum(numbers)

numbers = list(map(int, input("Enter a list of numbers separated by spaces: ").split()))
print(f"The sum of the list is {sum_of_list(numbers)}.")

def count_occurrences(elements, target):
    return elements.count(target)

elements = list(map(int, input("Enter a list of numbers separated by spaces: ").split()))
target = int(input("Enter the element to count: "))
print(f"The element {target} occurs {count_occurrences(elements, target)} times in the list.")

def min_and_max(numbers):
    return min(numbers), max(numbers)

numbers = list(map(int, input("Enter a list of numbers separated by spaces: ").split()))
min_value, max_value = min_and_max(numbers)
print(f"The minimum value is {min_value} and the maximum value is {max_value}.")

def celsius_to_fahrenheit(celsius):
    return (celsius * 9/5) + 32

def fahrenheit_to_celsius(fahrenheit):
    return (fahrenheit - 32) * 5/9

choice = input("Convert from (C)elsius to Fahrenheit or (F)ahrenheit to Celsius? (C/F): ").strip().upper()
temperature = float(input("Enter the temperature: "))

if choice == 'C':
    print(f"{temperature}째C is {celsius_to_fahrenheit(temperature)}째F.")
elif choice == 'F':
    print(f"{temperature}째F is {fahrenheit_to_celsius(temperature)}째C.")
else:
    print("Invalid choice.")

def calculator(num1, num2, operator):
    if operator == '+':
        return num1 + num2
    elif operator == '-':
        return num1 - num2
    elif operator == '*':
        return num1 * num2
    elif operator == '/':
        return num1 / num2
    else:
        return "Invalid operator"

num1 = float(input("Enter the first number: "))
num2 = float(input("Enter the second number: "))
operator = input("Enter the operator (+, -, *, /): ")

print(f"The result is: {calculator(num1, num2, operator)}")

def check_prefix_suffix(string, prefix, suffix):
    starts_with_prefix = string.startswith(prefix)
    ends_with_suffix = string.endswith(suffix)
    return starts_with_prefix, ends_with_suffix

string = input("Enter a string: ")
prefix = input("Enter the prefix to check: ")
suffix = input("Enter the suffix to check: ")

starts_with_prefix, ends_with_suffix = check_prefix_suffix(string, prefix, suffix)
print(f"String starts with '{prefix}': {starts_with_prefix}")
print(f"String ends with '{suffix}': {ends_with_suffix}")

def string_to_list(string):
    return list(string)

string = input("Enter a string: ")
print(string_to_list(string))











